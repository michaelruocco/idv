plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '6.0.0'
    id 'com.avast.gradle.docker-compose' version '0.10.4'
    id 'com.moowork.node' version '1.3.1'
    id 'com.github.michaelruocco.gradle-postman-runner' version '0.1.0'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage;
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage;

repositories {
    mavenCentral()
}

ext['junit-jupiter.version'] = ext.junitVersion

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.2.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.github.boostchicken:spring-data-dynamodb:5.2.1'

    compile project(':entities')
    compile project(':use-cases')
    compile project(':api')

    compile project(':dynamo-db')
    compile project(':in-memory-db')
    compile project(':uk-config')

    testCompile project(':entities').sourceSets.test.output
    testCompile project(':use-cases').sourceSets.test.output
    testCompile project(':api').sourceSets.test.output
    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
    testCompile 'org.testcontainers:testcontainers:1.12.4'
    testCompile 'org.testcontainers:junit-jupiter:1.12.4'

}

bootRun {
    args = ["--spring.profiles.active=in-memory-mongo", "--server.port=8081"]
}

docker {
    registryCredentials {
        username = System.getenv("DOCKER_USERNAME")
        password = System.getenv("DOCKER_PASSWORD")
    }
}

task buildImage(type: DockerBuildImage) {
    inputDir.set(file('.'))
    images.add('michaelruocco/verification-context-spring-app:latest')
}

task pushImage(type: DockerPushImage) {
    images.set(buildImage.images)
}

node {
    download = false
}

postman {
    collections = fileTree(dir: '../postman', include: '*postman_collection.json')
    environment = file('../postman/local.postman_environment.json')
}