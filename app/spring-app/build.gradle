plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '6.3.0'
    id 'com.avast.gradle.docker-compose' version '0.10.9'
    id 'com.moowork.node' version '1.3.1'
    id 'com.github.michaelruocco.gradle-postman-runner' version '0.1.2'
    id 'org.unbroken-dome.test-sets' version '2.2.1'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

testSets {
    integrationTest
}

repositories {
    mavenCentral()
}

ext['junit-jupiter.version'] = ext.junitVersion

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.2.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    compile project(':uk-config')

    compile project(':verification-context-entities')
    compile project(':verification-context-use-cases')

    compile project(':verification-context-dynamo-db')
    compile project(':verification-context-in-memory-db')

    compile project(':one-time-passcode-entities')
    compile project(':one-time-passcode-use-cases')

    compile project(':one-time-passcode-dynamo-db')
    compile project(':one-time-passcode-in-memory-db')

    compile project(':one-time-passcode-sns-delivery')
    compile project(':one-time-passcode-in-memory-delivery')

    testCompile project(':verification-context-api').sourceSets.test.output
    testCompile project(':verification-context-entities').sourceSets.test.output
    testCompile project(':verification-context-use-cases').sourceSets.test.output
    testCompile project(':one-time-passcode-entities').sourceSets.test.output
    testCompile project(':one-time-passcode-use-cases').sourceSets.test.output

    integrationTestCompile 'com.github.stefanbirkner:system-rules:1.19.0'
    integrationTestCompile project(':one-time-passcode-sns-delivery').sourceSets.integrationTest.output
    integrationTestCompile "org.testcontainers:junit-jupiter:${testContainersVersion}"
}

integrationTest {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

bootRun {
    systemProperties = System.properties
    args = ["--server.port=8081"]
}

docker {
    registryCredentials {
        username = System.getenv("DOCKER_USERNAME")
        password = System.getenv("DOCKER_PASSWORD")
    }
}

task buildImage(type: DockerBuildImage) {
    inputDir.set(file('.'))
    images.add('michaelruocco/verification-context-spring-app:latest')
}

task pushImage(type: DockerPushImage) {
    images.set(buildImage.images)
}

node {
    download = false
}

postman {
    collections = fileTree(dir: '../postman', include: '*.postman_collection.json')
    environment = file('../postman/local.postman_environment.json')
}