plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '6.0.0'
    id 'com.avast.gradle.docker-compose' version '0.10.0'
    // the postman plugin only currently works against 0.14 and not any later versions of the node plugin
    // I have raised this issue to see if support for later versions is intended to be added
    // https://github.com/simomat/gradle-postman-runner/issues/10
    id 'com.moowork.node' version '0.14'
    id 'de.infonautika.postman' version '0.0.5'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage;
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage;

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-dependencies:2.2.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.data:spring-data-mongodb'

    // the spring boot gradle plugin pulls on old versions of junit platform engine and commons (1.3.2)
    // the explicit dependencies below bring in the latest version otherwise it is not
    // possible to run / detect unit tests
    testImplementation 'org.junit.platform:junit-platform-engine:1.5.2'
    testImplementation 'org.junit.platform:junit-platform-commons:1.5.2'

    compile project(':entities')
    compile project(':use-cases')
    compile project(':api')

    compile project(':mongo-db')
    compile project(':in-memory-db')
    compile project(':uk-config')
    compile 'de.bwaldvogel:mongo-java-server:1.22.0'

    testCompile project(':entities').sourceSets.test.output
    testCompile project(':use-cases').sourceSets.test.output
    testCompile project(':api').sourceSets.test.output
    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
}

bootRun {
    args = ["--spring.profiles.active=in-memory-mongo", "--server.port=8081"]
}

docker {
    registryCredentials {
        username = System.getenv("DOCKER_USERNAME")
        password = System.getenv("DOCKER_PASSWORD")
    }
}

task buildImage(type: DockerBuildImage) {
    inputDir.set(file('.'))
    images.add('michaelruocco/verification-context-spring-app:latest')
}

task pushImage(type: DockerPushImage) {
    images.set(buildImage.images)
}

node {
    download = false
}

postman {
    collections = fileTree(dir: '../postman', include: '*postman_collection.json')
    environment = file('../postman/local.postman_environment.json')
}