{
	"info": {
		"_postman_id": "d7e26050-0934-4513-a5b2-304e1ccf3c40",
		"name": "verification-context-uk",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "post-context-all-ineligible",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da99486e-d396-4a75-b719-0e076e97438f",
						"exec": [
							"var json = JSON.parse(responseBody)",
							"postman.setEnvironmentVariable(\"verificationContextId\", json.data.id)",
							"postman.setEnvironmentVariable(\"idvId\", json.data.attributes.identity.id)",
							"",
							"pm.test(\"should return created status\", function () {",
							"    pm.response.to.have.status(201)",
							"})",
							"",
							"pm.test(\"context should contain 4 sequences\", function () {",
							"    pm.expect(json.data.attributes.sequences.length).to.equal(4)",
							"})",
							"",
							"pm.test(\"all sequences should not be eligible\", function () {",
							"    var sequences = json.data.attributes.sequences",
							"    sequences.find(sequence => {",
							"        pm.expect(sequence.eligible).to.eql(false)",
							"    }); ",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5e8669b0-c9d7-4b53-b2db-e0f5b84d5986",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": {\n    \t\"type\": \"verificationContexts\",\n        \"attributes\": {\n            \"channel\": {\n                \"id\": \"RSA\",\n                \"issuerSessionId\": \"08c1688e-02b0-47bb-9e3c-ed6aa1b0542b\"\n            },\n            \"activity\": {\n                \"name\": \"online-purchase\",\n            \t\"timestamp\": \"{{timestampUtc}}\",\n                \"merchantName\": \"Amazon\",\n                \"reference\": \"ABC-123\",\n                \"cost\": {\n                    \"amount\": 10.99,\n                    \"currency\": \"GBP\"\n                }\n            },\n            \"providedAlias\": {\n                \"type\": \"credit-card-number\",\n                \"value\": \"4929001111111119\"\n            }\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/verificationContexts",
					"host": [
						"{{host}}"
					],
					"path": [
						"verificationContexts"
					]
				}
			},
			"response": []
		},
		{
			"name": "post-context-all-eligible",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e58fcaf-fdc9-4f3c-ab05-efb882d6d05b",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"verificationContextId\", json.data.id);",
							"postman.setEnvironmentVariable(\"idvId\", json.data.attributes.identity.id);",
							"",
							"pm.test(\"should return created status\", function () {",
							"    pm.response.to.have.status(201)",
							"})",
							"",
							"pm.test(\"context should contain 4 sequences\", function () {",
							"    pm.expect(json.data.attributes.sequences.length).to.equal(4)",
							"})",
							"",
							"pm.test(\"all sequences should be eligible\", function () {",
							"    var sequences = json.data.attributes.sequences",
							"    sequences.find(sequence => {",
							"        pm.expect(sequence.eligible).to.eql(true)",
							"    }); ",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0fce8ef9-a85b-4bac-a81a-cfbc2deb2657",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": {\n    \t\"type\": \"verificationContexts\",\n        \"attributes\": {\n            \"channel\": {\n                \"id\": \"RSA\"\n            },\n            \"activity\": {\n                \"name\": \"online-purchase\",\n                \"timestamp\": \"{{timestampUtc}}\",\n                \"merchantName\": \"Amazon\",\n                \"reference\": \"ABC-123\",\n                \"cost\": {\n                    \"amount\": 10.99,\n                    \"currency\": \"GBP\"\n                }\n            },\n            \"providedAlias\": {\n                \"type\": \"credit-card-number\",\n                \"value\": \"4929001111111112\"\n            }\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/verificationContexts",
					"host": [
						"{{host}}"
					],
					"path": [
						"verificationContexts"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-context",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c8fd597f-4694-4bf0-a478-42fcc2692abe",
						"exec": [
							"pm.test(\"should return ok status\", function () {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/verificationContexts/{{verificationContextId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"verificationContexts",
						"{{verificationContextId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch-context-result",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a1fdf6b2-e49b-42e9-9179-9792e0eaa01f",
						"exec": [
							"pm.test(\"should return ok status\", function () {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": {\n        \"id\": \"{{verificationContextId}}\",\n        \"type\": \"verificationContexts\",\n        \"attributes\": {\n            \"result\": {\n                \"methodName\": \"push-notification\",\n                \"verificationId\": \"{{$guid}}\",\n                \"timestamp\": \"{{timestampUtc}}\",\n                \"successful\": true\n            }\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/verificationContexts/{{verificationContextId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"verificationContexts",
						"{{verificationContextId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-lockout-state",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/lockoutStates?channelId=RSA&activityName=online-purchase&aliasType=credit-card-number&aliasValue=4929001111111112",
					"host": [
						"{{host}}"
					],
					"path": [
						"lockoutStates"
					],
					"query": [
						{
							"key": "channelId",
							"value": "RSA"
						},
						{
							"key": "activityName",
							"value": "online-purchase"
						},
						{
							"key": "aliasType",
							"value": "credit-card-number"
						},
						{
							"key": "aliasValue",
							"value": "4929001111111112"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reset-lockout-state",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "11e12aec-d483-4be3-82e9-aa1f8a704a2b",
						"exec": [
							"pm.test(\"should return ok status\", function () {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": {\n        \"type\": \"lockoutStates\",\n        \"attributes\": {\n            \"channelId\": \"RSA\",\n            \"activityName\": \"online-purchase\",\n            \"alias\": {\n                \"type\": \"credit-card-number\",\n                \"value\": \"4929001111111112\"\n            }\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/lockoutStates",
					"host": [
						"{{host}}"
					],
					"path": [
						"lockoutStates"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-lockout-policies",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "33654285-266e-4bcb-a487-7b197f635f47",
						"exec": [
							"pm.test(\"should return ok status\", function () {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/lockoutPolicies",
					"host": [
						"{{host}}"
					],
					"path": [
						"lockoutPolicies"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-lockout-policy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "33654285-266e-4bcb-a487-7b197f635f47",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"lockoutPolicyId\", json.data.id);",
							"",
							"pm.test(\"should return created status\", function () {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": {\n        \"id\": \"{{$guid}}\",\n        \"type\": \"lockoutPolicies\",\n        \"attributes\": {\n            \"level\": {\n                \"channelId\": \"AS3\",\n                \"activityNames\": [\n                    \"online-purchase\"\n                ],\n                \"aliasTypes\": [\n                    \"all\"\n                ]\n            },\n            \"recordAttempts\": \"never\",\n            \"type\": \"non-locking\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/lockoutPolicies",
					"host": [
						"{{host}}"
					],
					"path": [
						"lockoutPolicies"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-lockout-policy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "33654285-266e-4bcb-a487-7b197f635f47",
						"exec": [
							"pm.test(\"should return ok status\", function () {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/lockoutPolicies/{{lockoutPolicyId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"lockoutPolicies",
						"{{lockoutPolicyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update-lockout-policy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "196876bc-69a4-49be-b878-5f571f8ddf26",
						"exec": [
							"postman.setEnvironmentVariable('timestampUtc', (new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "33654285-266e-4bcb-a487-7b197f635f47",
						"exec": [
							"pm.test(\"should return ok status\", function () {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": {\n        \"id\": \"{{lockoutPolicyId}}\",\n        \"type\": \"lockoutPolicies\",\n        \"attributes\": {\n            \"level\": {\n                \"channelId\": \"AS3\",\n                \"activityNames\": [\n                    \"online-purchase\"\n                ],\n                \"aliasTypes\": [\n                    \"all\"\n                ]\n            },\n            \"recordAttempts\": \"every-attempt\",\n            \"type\": \"hard-lock\",\n            \"maxNumberOfAttempts\": 3\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/lockoutPolicies",
					"host": [
						"{{host}}"
					],
					"path": [
						"lockoutPolicies"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}